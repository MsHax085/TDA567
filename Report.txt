public boolean addWorkingPeriod(String employee, int starttime, int endtime) { ... }

##### Richards test

Input space:	starttime in {MIN_INT, ..., MAX_INT}
				endtime in {MIN_INT, ..., MAX_INT}
				employee not null
				
partition #1:	starttime < 0 (starttime in {MIN_INT, ..., -1})
partition #2:	endtime >= size (endtime in {size, ..., MAX_INT})
partition #3:	starttime > endtime (starttime in {endtime + 1, ..., MAX_INT})
partition #4:	hour.workingEmployees.length = requiredNumber (hour in {starttime, ..., endtime})
partition #5:	hour.workingEmployees.contrains(employee) (hour in {starttime, ..., endtime})

Border cases:
border1:		input: starttime 	= MIN_INT, expected: false
border2:		input: starttime 	= -1, expected: false
border3:		input: endtime 		= size, expected: false
border4:		input: endtime 		= MAX_INT, expected: false
border5:		input: starttime 	= endtime + 1, expected: false
border6:		input: starttime 	= MAX_INT, expected: false

##### Richards test


Input space:	"starttime" 	in {MIN_INT, ..., MAX_INT}
		"endtime" 	in {MIN_INT, ..., MAX_INT}
		
Partition #1: starttime < 0 (starttime in {MIN_INT, ..., -1}) 
	Test_part1: input: "x = -10", expected: "False" and schedule is unchanged."

Parition #2: starttime > 0 (starttime in {1, ..., MAX_INT}
	Test_part2: input: "x = 10",  expected: "True and for i between starttime and endtime,
				     workingEmployees contain a string equal to employee and
        			     the rest of the schedule is unchanged"
//->
Partition #3: starttime < endtime {0, ..., endtime}
	Test_part3: input: "starttime = 3 " 	expected: "expected: "True and for i between starttime and endtime,
				     		workingEmployees contain a string equal to employee and
        			     		the rest of the schedule is unchanged"
Partition #4: starttime > endtime
<-//
.....



//WIP

public String[] workingEmployees(int starttime, int endtime){ ... }

	returns a list of all employees working at some point during the interval starttime to endtime.

Input space:	"starttime" > 0 || = 0 (or: "starttime" in {0, ..., ?})
		"endtime" < size (or: "endtime" in 0





